/*
 * lab6_part2.c
 *
 *  Created on: Mar 25, 2025
 *      Author: steven bolt
 */

typedef unsigned int		uint32;
typedef unsigned short		uint16;
typedef unsigned char		uint8;

uint8 byte_ram_test(uint8 start_addr, int num_bytes, uint8 test_data){
	uint8 byte_result[num_bytes] = 0x0000;		//output array

	uint8* byte_ptr = &start_addr;		// point to starting address

	for(int i=0; i < num_bytes; i++){
		*byte_ptr + i = test_data;		// write data to location at start address offset by i bytes
	};

	addr = start_addr;
	for(int i=0; i < num_bytes; i++){
		byte_result[i] = *byte_ptr + i;	// read data into output array from start address offset by i bytes
	};

	return byte_result;
}

uint16 short_ram_test(uint16 start_addr, int num_bytes, uint16 test_data){
	uint16 short_result[num_bytes] = 0x0000;	//output array

	uint16* byte_ptr = &start_addr;		// point to starting address

	for(int i=0; i < num_bytes; i++){
		*byte_ptr + i = test_data;		// write data to location at start address offset by i*2 bytes
	};

	addr = start_addr;
	for(int i=0; i < num_bytes; i++){
		byte_result[i] = *byte_ptr + i;	// read data into output array from start address offset by i*2 bytes
	};

	return short_result;
}

uint32 int_ram_test(uint32 start_addr, int num_bytes, uint32 test_data){
	uint32 short_result[num_bytes] = 0x00000000;	//output array

	uint32* byte_ptr = &start_addr;		// point to starting address

	for(int i=0; i < num_bytes; i++){
		*byte_ptr + i = test_data;		// write data to location at start address offset by i*4 bytes
	};

	addr = start_addr;
	for(int i=0; i < num_bytes; i++){
		byte_result[i] = *byte_ptr + i;	// read data into output array from start address offset by i*4 bytes
	};

	return int_result;
}

void main(){
	byte_ram_test(0x0000, 4, 0x1234);
}
